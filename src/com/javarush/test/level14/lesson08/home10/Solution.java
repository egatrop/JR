package com.javarush.test.level14.lesson08.home10;import java.util.LinkedList;import java.util.List;public class Solution {    public static void main(String[] args) {        new NotIncapsulatedClass();    }    public static class NotIncapsulatedClass {        List<Number> list = new LinkedList<Number>();        public NotIncapsulatedClass() {            list = initList((LinkedList<Number>) list);            printList(list);            processCastedObjects(list);        }        private void processCastedObjects(List<Number> list) {            for (Number object : list) {                if (object instanceof Float) {                    Float a = (Float) object;                    System.out.println("Is float value defined? " + a.isNaN());                } else if (object instanceof Double) {                    Double a = (Double) object;                    System.out.println("Is double value infinite? " + a.isInfinite());                }            }        }        private LinkedList<Number> initList(LinkedList<Number> list) {            list.add(new Double(1000f));            list.add(new Double("123e-445632"));            list.add(new Float(-90 / -3));            list.remove(new Double("123e-445632"));            return list;        }        private void printList(List<Number> list) {            for (int i = 0; i < list.size(); i++) {                System.out.println(list.get(i));            }        }    }}